

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.assertEquals;
import java.io.File;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxBinary;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;


public class TestScriptLogin_Java {

	private WebDriver driver; 
	private String baseUrl; 
	

	
	@DataProvider(name = "Test_Java")
	public Object[][] testData() {

		Object[][] data = new Object[4][2];

		// 1st row
		data[0][0] = "mngr1336";
		data[0][1] = "dAnavUq";
		//2nd row
		data[1][0] = "invalid";
		data[1][1] = "valid";
		//3rd row
		data[2][0] = "valid";
		data[2][1] = "invalid";
		//4th row
		data[3][0] = "invalid";
		data[3][1] = "invalid";
		return data;
	}

	
	@BeforeMethod
	public void setUp() throws Exception {
			System.setProperty("webdriver.gecko.driver", "C:\\Users\\Sruthi\\Desktop\\Avinash\\Selenium\\Libs\\geckodriver.exe");
		WebDriver driver = new FirefoxDriver();

		
		baseUrl = "http://www.demo.guru99.com/";
		driver.manage().timeouts()
				.implicitlyWait(15, TimeUnit.SECONDS);
		
		driver.get(baseUrl);
	}



	@Test(dataProvider = "Test_Java")
	public void testCase05(String username, String password) throws Exception {
		String actualTitle;
		String actualBoxMsg;
		driver.findElement(By.name("uid")).clear();
		driver.findElement(By.name("uid")).sendKeys(username);
		driver.findElement(By.name("password")).clear();
		driver.findElement(By.name("password")).sendKeys(password);
		driver.findElement(By.name("btnLogin")).click();

		 try{ 
			    
		       	Alert alt = driver.switchTo().alert();
				actualBoxMsg = alt.getText(); 
				alt.accept();
									
				assertEquals(actualBoxMsg,"User or Password is not valid");
				
			}    
		    catch (NoAlertPresentException Ex){ 
		    	
				String pageText = driver.findElement(By.tagName("tbody")).getText();

						
				String[] parts = pageText.split(":");
				String dynamicText = parts[1];

				
				assertTrue(dynamicText.substring(1, 5).equals("mngr"));
				
				String remain = dynamicText.substring(dynamicText.length() - 4);
				
				assertTrue(remain.matches("[0-9]+"));
	        } 
		}		

		

	


	@AfterMethod
	public void tearDown() throws Exception {
		driver.quit();
	}
}
